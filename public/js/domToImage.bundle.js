/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/tingle.js/dist/tingle.min.css":
/*!******************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/tingle.js/dist/tingle.min.css ***!
  \******************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".tingle-modal *{box-sizing:border-box}.tingle-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1000;display:flex;visibility:hidden;flex-direction:column;align-items:center;overflow:hidden;-webkit-overflow-scrolling:touch;background:rgba(0,0,0,.85);opacity:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.tingle-modal--confirm .tingle-modal-box{text-align:center}.tingle-modal--noOverlayClose{cursor:default}.tingle-modal--noClose .tingle-modal__close{display:none}.tingle-modal__close{position:fixed;top:2.5rem;right:2.5rem;z-index:1000;padding:0;width:2rem;height:2rem;border:none;background-color:transparent;color:#fff;cursor:pointer}.tingle-modal__close svg *{fill:currentColor}.tingle-modal__closeLabel{display:none}.tingle-modal__close:hover{color:#fff}.tingle-modal-box{position:relative;flex-shrink:0;margin-top:auto;margin-bottom:auto;width:60%;border-radius:4px;background:#fff;opacity:1;cursor:auto;will-change:transform,opacity}.tingle-modal-box__content{padding:3rem 3rem}.tingle-modal-box__footer{padding:1.5rem 2rem;width:auto;border-bottom-right-radius:4px;border-bottom-left-radius:4px;background-color:#f5f5f5;cursor:auto}.tingle-modal-box__footer::after{display:table;clear:both;content:\\\"\\\"}.tingle-modal-box__footer--sticky{position:fixed;bottom:-200px;z-index:10001;opacity:1;transition:bottom .3s ease-in-out .3s}.tingle-enabled{position:fixed;right:0;left:0;overflow:hidden}.tingle-modal--visible .tingle-modal-box__footer{bottom:0}.tingle-enabled .tingle-content-wrapper{filter:blur(8px)}.tingle-modal--visible{visibility:visible;opacity:1}.tingle-modal--visible .tingle-modal-box{animation:scale .2s cubic-bezier(.68,-.55,.265,1.55) forwards}.tingle-modal--overflow{overflow-y:scroll;padding-top:8vh}.tingle-btn{display:inline-block;margin:0 .5rem;padding:1rem 2rem;border:none;background-color:grey;box-shadow:none;color:#fff;vertical-align:middle;text-decoration:none;font-size:inherit;font-family:inherit;line-height:normal;cursor:pointer;transition:background-color .4s ease}.tingle-btn--primary{background-color:#3498db}.tingle-btn--danger{background-color:#e74c3c}.tingle-btn--default{background-color:#34495e}.tingle-btn--pull-left{float:left}.tingle-btn--pull-right{float:right}@media (max-width :540px){.tingle-modal{top:0;display:block;padding-top:60px;width:100%}.tingle-modal-box{width:auto;border-radius:0}.tingle-modal-box__content{overflow-y:scroll}.tingle-modal--noClose{top:0}.tingle-modal--noOverlayClose{padding-top:0}.tingle-modal-box__footer .tingle-btn{display:block;float:none;margin-bottom:1rem;width:100%}.tingle-modal__close{top:0;right:0;left:0;display:block;width:100%;height:60px;border:none;background-color:#2c3e50;box-shadow:none;color:#fff}.tingle-modal__closeLabel{display:inline-block;vertical-align:middle;font-size:1.6rem;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,Oxygen,Ubuntu,Cantarell,\\\"Fira Sans\\\",\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",sans-serif}.tingle-modal__closeIcon{display:inline-block;margin-right:.8rem;width:1.6rem;vertical-align:middle;font-size:0}}@supports ((-webkit-backdrop-filter:blur(12px)) or (backdrop-filter:blur(12px))){.tingle-modal:before{position:fixed;top:0;right:0;bottom:0;left:0;content:\\\"\\\";-webkit-backdrop-filter:blur(18px);backdrop-filter:blur(18px);pointer-events:none}.tingle-enabled .tingle-content-wrapper{filter:none}}@keyframes scale{0%{opacity:0;transform:scale(.9)}100%{opacity:1;transform:scale(1)}}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/tingle.js/dist/tingle.min.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/dom-to-image-more/src/dom-to-image-more.js":
/*!*****************************************************************!*\
  !*** ./node_modules/dom-to-image-more/src/dom-to-image-more.js ***!
  \*****************************************************************/
/***/ (function(module) {

eval("(function(global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests)\n        useCredentials: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        toCanvas: toCanvas,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (true)\n        module.exports = domtoimage;\n    else\n        {}\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {Number} options.scale - a Number multiplier to scale up the canvas before rendering to reduce fuzzy images, defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function(node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function(clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function(property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function(canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function(canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function(canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a canvas object\n     * */\n    function toCanvas(node, options) {\n        return draw(node, options || {});\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if (typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if (typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n\n        if(typeof(options.useCredentials) === 'undefined') {\n            domtoimage.impl.options.useCredentials = defaultOptions.useCredentials;\n        } else {\n            domtoimage.impl.options.useCredentials = options.useCredentials;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function(image) {\n                var scale = typeof(options.scale) !== 'number' ? 1 : options.scale;\n                var canvas = newCanvas(domNode, scale);\n                var ctx = canvas.getContext('2d');\n                if (image) {\n                    ctx.scale(scale, scale);\n                    ctx.drawImage(image, 0, 0);\n                }\n                return canvas;\n            });\n\n        function newCanvas(domNode, scale) {\n            var canvas = document.createElement('canvas');\n            canvas.width = (options.width || util.width(domNode)) * scale;\n            canvas.height = (options.height || util.height(domNode)) * scale;\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function(clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function(clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function() {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function(child) {\n                    done = done\n                        .then(function() {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function(childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function() {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) {\n                        target.cssText = source.cssText;\n                        target.font = source.font; // here, we re-assign the font prop.\n                    } else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function(name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function(element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    var currentClass = clone.getAttribute('class');\n                    if (currentClass) {\n                        clone.setAttribute('class', currentClass + ' ' + className);\n                    }\n\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function(attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function(cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function() {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function(node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function(xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function(foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function(svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)(\\?|$)/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function(resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function(resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function() {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            if (uri === 'data:,') return Promise.resolve();\n            return new Promise(function(resolve, reject) {\n                var image = new Image();\n                if(domtoimage.impl.options.useCredentials) {\n                    image.crossOrigin = 'use-credentials';\n                }\n                image.onload = function() {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if (domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function(resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                if(domtoimage.impl.options.useCredentials) {\n                    request.withCredentials = true;\n                }\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if (domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if (split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if (placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function() {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if (placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function(arg) {\n                return new Promise(function(resolve) {\n                    setTimeout(function() {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function(url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function(url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function(data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function(dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function(urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function(url) {\n                        done = done.then(function(string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function(webFonts) {\n                    return Promise.all(\n                        webFonts.map(function(webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function(cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function(rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function(rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function(rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function(sheet) {\n                    if (sheet.hasOwnProperty(\"cssRules\")) {\n                        try {\n                            util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                        } catch (e) {\n                            console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                        }\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function() {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function(data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function(dataUrl) {\n                        return new Promise(function(resolve, reject) {\n                            element.onload = resolve;\n                            // for any image with invalid src(such as <img src />), just ignore it\n                            element.onerror = resolve;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function() {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function(child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function(inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function() {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/dom-to-image-more/src/dom-to-image-more.js?");

/***/ }),

/***/ "./node_modules/tingle.js/dist/tingle.min.css":
/*!****************************************************!*\
  !*** ./node_modules/tingle.js/dist/tingle.min.css ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _css_loader_dist_cjs_js_tingle_min_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../css-loader/dist/cjs.js!./tingle.min.css */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/tingle.js/dist/tingle.min.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_css_loader_dist_cjs_js_tingle_min_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_css_loader_dist_cjs_js_tingle_min_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/tingle.js/dist/tingle.min.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/tingle.js/dist/tingle.min.js":
/*!***************************************************!*\
  !*** ./node_modules/tingle.js/dist/tingle.min.js ***!
  \***************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(t,o){ true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (o),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0}(this,function(){var o=!1;function t(t){this.opts=function(){for(var t=1;t<arguments.length;t++)for(var o in arguments[t])arguments[t].hasOwnProperty(o)&&(arguments[0][o]=arguments[t][o]);return arguments[0]}({},{onClose:null,onOpen:null,beforeOpen:null,beforeClose:null,stickyFooter:!1,footer:!1,cssClass:[],closeLabel:\"Close\",closeMethods:[\"overlay\",\"button\",\"escape\"]},t),this.init()}function e(){this.modalBoxFooter&&(this.modalBoxFooter.style.width=this.modalBox.clientWidth+\"px\",this.modalBoxFooter.style.left=this.modalBox.offsetLeft+\"px\")}return t.prototype.init=function(){if(!this.modal)return function(){this.modal=document.createElement(\"div\"),this.modal.classList.add(\"tingle-modal\"),0!==this.opts.closeMethods.length&&-1!==this.opts.closeMethods.indexOf(\"overlay\")||this.modal.classList.add(\"tingle-modal--noOverlayClose\");this.modal.style.display=\"none\",this.opts.cssClass.forEach(function(t){\"string\"==typeof t&&this.modal.classList.add(t)},this),-1!==this.opts.closeMethods.indexOf(\"button\")&&(this.modalCloseBtn=document.createElement(\"button\"),this.modalCloseBtn.type=\"button\",this.modalCloseBtn.classList.add(\"tingle-modal__close\"),this.modalCloseBtnIcon=document.createElement(\"span\"),this.modalCloseBtnIcon.classList.add(\"tingle-modal__closeIcon\"),this.modalCloseBtnIcon.innerHTML='<svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M.3 9.7c.2.2.4.3.7.3.3 0 .5-.1.7-.3L5 6.4l3.3 3.3c.2.2.5.3.7.3.2 0 .5-.1.7-.3.4-.4.4-1 0-1.4L6.4 5l3.3-3.3c.4-.4.4-1 0-1.4-.4-.4-1-.4-1.4 0L5 3.6 1.7.3C1.3-.1.7-.1.3.3c-.4.4-.4 1 0 1.4L3.6 5 .3 8.3c-.4.4-.4 1 0 1.4z\" fill=\"#000\" fill-rule=\"nonzero\"/></svg>',this.modalCloseBtnLabel=document.createElement(\"span\"),this.modalCloseBtnLabel.classList.add(\"tingle-modal__closeLabel\"),this.modalCloseBtnLabel.innerHTML=this.opts.closeLabel,this.modalCloseBtn.appendChild(this.modalCloseBtnIcon),this.modalCloseBtn.appendChild(this.modalCloseBtnLabel));this.modalBox=document.createElement(\"div\"),this.modalBox.classList.add(\"tingle-modal-box\"),this.modalBoxContent=document.createElement(\"div\"),this.modalBoxContent.classList.add(\"tingle-modal-box__content\"),this.modalBox.appendChild(this.modalBoxContent),-1!==this.opts.closeMethods.indexOf(\"button\")&&this.modal.appendChild(this.modalCloseBtn);this.modal.appendChild(this.modalBox)}.call(this),function(){this._events={clickCloseBtn:this.close.bind(this),clickOverlay:function(t){var o=this.modal.offsetWidth-this.modal.clientWidth,e=t.clientX>=this.modal.offsetWidth-15,s=this.modal.scrollHeight!==this.modal.offsetHeight;if(\"MacIntel\"===navigator.platform&&0==o&&e&&s)return;-1!==this.opts.closeMethods.indexOf(\"overlay\")&&!function(t,o){for(;(t=t.parentElement)&&!t.classList.contains(o););return t}(t.target,\"tingle-modal\")&&t.clientX<this.modal.clientWidth&&this.close()}.bind(this),resize:this.checkOverflow.bind(this),keyboardNav:function(t){-1!==this.opts.closeMethods.indexOf(\"escape\")&&27===t.which&&this.isOpen()&&this.close()}.bind(this)},-1!==this.opts.closeMethods.indexOf(\"button\")&&this.modalCloseBtn.addEventListener(\"click\",this._events.clickCloseBtn);this.modal.addEventListener(\"mousedown\",this._events.clickOverlay),window.addEventListener(\"resize\",this._events.resize),document.addEventListener(\"keydown\",this._events.keyboardNav)}.call(this),document.body.appendChild(this.modal,document.body.firstChild),this.opts.footer&&this.addFooter(),this},t.prototype._busy=function(t){o=t},t.prototype._isBusy=function(){return o},t.prototype.destroy=function(){null!==this.modal&&(this.isOpen()&&this.close(!0),function(){-1!==this.opts.closeMethods.indexOf(\"button\")&&this.modalCloseBtn.removeEventListener(\"click\",this._events.clickCloseBtn);this.modal.removeEventListener(\"mousedown\",this._events.clickOverlay),window.removeEventListener(\"resize\",this._events.resize),document.removeEventListener(\"keydown\",this._events.keyboardNav)}.call(this),this.modal.parentNode.removeChild(this.modal),this.modal=null)},t.prototype.isOpen=function(){return!!this.modal.classList.contains(\"tingle-modal--visible\")},t.prototype.open=function(){if(!this._isBusy()){this._busy(!0);var t=this;return\"function\"==typeof t.opts.beforeOpen&&t.opts.beforeOpen(),this.modal.style.removeProperty?this.modal.style.removeProperty(\"display\"):this.modal.style.removeAttribute(\"display\"),this._scrollPosition=window.pageYOffset,document.body.classList.add(\"tingle-enabled\"),document.body.style.top=-this._scrollPosition+\"px\",this.setStickyFooter(this.opts.stickyFooter),this.modal.classList.add(\"tingle-modal--visible\"),\"function\"==typeof t.opts.onOpen&&t.opts.onOpen.call(t),t._busy(!1),this.checkOverflow(),this}},t.prototype.close=function(t){if(!this._isBusy()){if(this._busy(!0),!1,\"function\"==typeof this.opts.beforeClose)if(!this.opts.beforeClose.call(this))return void this._busy(!1);document.body.classList.remove(\"tingle-enabled\"),document.body.style.top=null,window.scrollTo({top:this._scrollPosition,behavior:\"instant\"}),this.modal.classList.remove(\"tingle-modal--visible\");var o=this;o.modal.style.display=\"none\",\"function\"==typeof o.opts.onClose&&o.opts.onClose.call(this),o._busy(!1)}},t.prototype.setContent=function(t){return\"string\"==typeof t?this.modalBoxContent.innerHTML=t:(this.modalBoxContent.innerHTML=\"\",this.modalBoxContent.appendChild(t)),this.isOpen()&&this.checkOverflow(),this},t.prototype.getContent=function(){return this.modalBoxContent},t.prototype.addFooter=function(){return function(){this.modalBoxFooter=document.createElement(\"div\"),this.modalBoxFooter.classList.add(\"tingle-modal-box__footer\"),this.modalBox.appendChild(this.modalBoxFooter)}.call(this),this},t.prototype.setFooterContent=function(t){return this.modalBoxFooter.innerHTML=t,this},t.prototype.getFooterContent=function(){return this.modalBoxFooter},t.prototype.setStickyFooter=function(t){return this.isOverflow()||(t=!1),t?this.modalBox.contains(this.modalBoxFooter)&&(this.modalBox.removeChild(this.modalBoxFooter),this.modal.appendChild(this.modalBoxFooter),this.modalBoxFooter.classList.add(\"tingle-modal-box__footer--sticky\"),e.call(this),this.modalBoxContent.style[\"padding-bottom\"]=this.modalBoxFooter.clientHeight+20+\"px\"):this.modalBoxFooter&&(this.modalBox.contains(this.modalBoxFooter)||(this.modal.removeChild(this.modalBoxFooter),this.modalBox.appendChild(this.modalBoxFooter),this.modalBoxFooter.style.width=\"auto\",this.modalBoxFooter.style.left=\"\",this.modalBoxContent.style[\"padding-bottom\"]=\"\",this.modalBoxFooter.classList.remove(\"tingle-modal-box__footer--sticky\"))),this},t.prototype.addFooterBtn=function(t,o,e){var s=document.createElement(\"button\");return s.innerHTML=t,s.addEventListener(\"click\",e),\"string\"==typeof o&&o.length&&o.split(\" \").forEach(function(t){s.classList.add(t)}),this.modalBoxFooter.appendChild(s),s},t.prototype.resize=function(){console.warn(\"Resize is deprecated and will be removed in version 1.0\")},t.prototype.isOverflow=function(){return window.innerHeight<=this.modalBox.clientHeight},t.prototype.checkOverflow=function(){this.modal.classList.contains(\"tingle-modal--visible\")&&(this.isOverflow()?this.modal.classList.add(\"tingle-modal--overflow\"):this.modal.classList.remove(\"tingle-modal--overflow\"),!this.isOverflow()&&this.opts.stickyFooter?this.setStickyFooter(!1):this.isOverflow()&&this.opts.stickyFooter&&(e.call(this),this.setStickyFooter(!0)))},{modal:t}});\n\n//# sourceURL=webpack://MemeGenerator/./node_modules/tingle.js/dist/tingle.min.js?");

/***/ }),

/***/ "./src/js/domToImage.js":
/*!******************************!*\
  !*** ./src/js/domToImage.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var dom_to_image_more__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dom-to-image-more */ \"./node_modules/dom-to-image-more/src/dom-to-image-more.js\");\n/* harmony import */ var dom_to_image_more__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dom_to_image_more__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tingle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tingle.js */ \"./node_modules/tingle.js/dist/tingle.min.js\");\n/* harmony import */ var tingle_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tingle_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tingle_js_dist_tingle_min_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tingle.js/dist/tingle.min.css */ \"./node_modules/tingle.js/dist/tingle.min.css\");\n\n\n\n\nvar outerContainer = document.createElement('div')\nvar innerContainer = document.createElement('div')\nvar image = document.createElement('img')\nvar topCaptionP = document.createElement('p')\nvar bottomCaptionP = document.createElement('p')\n\nvar reader = new FileReader()\nreader.addEventListener('load', (event) => {\n  image.src = event.target.result\n})\nvar name\nvar file\nvar topCaption\nvar bottomCaption\n\nouterContainer.className = 'outer-container'\ninnerContainer.className = 'inner-container'\nimage.className = 'meme-image'\ntopCaptionP.className = 'top-caption'\nbottomCaptionP.className = 'bottom-caption'\ninnerContainer.style = { background: 'transparent' }\n\nvar memeModal = new tingle_js__WEBPACK_IMPORTED_MODULE_1__.modal({\n  footer: true,\n  closeMethods: ['overlay', 'button', 'escape'],\n  closeLabel: 'Close'\n})\n\nmemeModal.addFooterBtn(\n  'Save to account',\n  'create-button tingle-create-button',\n  () => {\n    buttonSubmit()\n  }\n)\n\n__webpack_require__.g.formSubmit = (event) => {\n  event.preventDefault()\n  name = event.target[0].value\n  topCaption = event.target[1].value\n  bottomCaption = event.target[2].value\n  file = event.target[3].files[0]\n  reader.readAsDataURL(file)\n  topCaptionP.innerHTML = topCaption\n  bottomCaptionP.innerHTML = bottomCaption\n\n  innerContainer.appendChild(topCaptionP)\n  innerContainer.appendChild(image)\n  innerContainer.appendChild(bottomCaptionP)\n  outerContainer.appendChild(innerContainer)\n  memeModal.setContent(outerContainer)\n  memeModal.open()\n  setTimeout(() => {\n    document.querySelector('.tingle-create-button').scrollIntoView(false)\n  }, 500)\n  return false\n}\n\n__webpack_require__.g.buttonSubmit = () => {\n  dom_to_image_more__WEBPACK_IMPORTED_MODULE_0___default().toPng(innerContainer).then(function (dataUrl) {\n    console.log(dataUrl)\n    var image2 = new Image()\n    image2.src = dataUrl\n    fetch(dataUrl)\n      .then((response) => {\n        return response.blob()\n      })\n      .then((file2) => {\n        const formData = new FormData()\n        formData.append('meme[name]', name)\n        formData.append('meme[top_caption]', topCaption)\n        formData.append('meme[bottom_caption]', bottomCaption)\n        formData.append(\n          'meme[image]',\n          file2,\n          name + `.${file2.type.split('/').pop()}`\n        )\n        formData.append(\n          'meme[original_image]',\n          file,\n          name + `_original.${file.type.split('/').pop()}`\n        )\n        fetch('/memes', {\n          method: 'POST',\n          body: formData\n        })\n          .then(() => {\n            window.location.href = `/users/${user_id}/memes`\n          })\n          .catch(function (error) {\n            console.error('error', error)\n          })\n      })\n  })\n}\n\n\n//# sourceURL=webpack://MemeGenerator/./src/js/domToImage.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => module['default'] :
/******/ 				() => module;
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/js/domToImage.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;